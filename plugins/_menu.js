const config = require('../config')
const {cmd , commands} = require('../command')
const os = require("os")
const {runtime} = require('../lib/functions')
const pdfUrl = 'https://i.ibb.co/2PLgSdj/Picsart-24-09-16-17-49-35-655.jpg';

cmd({
    pattern: "menu",
    desc: "To get the menu.",
    react: "üìú",
    category: "main",
    filename: __filename
},
async(conn, mek, m,{from, quoted, body, isCmd, command, args, q, isGroup, sender, senderNumber, botNumber2, botNumber, pushname, isMe, isOwner, groupMetadata, groupName, participants, groupAdmins, isBotAdmins, isAdmins, reply}) => {
try{

let menu = {
main: '',
download: '',
group: '',
owner: '',
convert: '',
search: '',
ai: '',
fun: '',
other: ''
};

for (let i = 0; i < commands.length; i++) {
if (commands[i].pattern && !commands[i].dontAddCommandList) {
menu[commands[i].category] += `*‚ó¶ :* ${commands[i].pattern}\n`;
 }
}

let menumsg = `
üëã Hellow.! *${pushname}* ,

‚¶Å …™ ·¥Ä·¥ç ·¥Ä…¥ ·¥Ä·¥ú·¥õ·¥è·¥ç·¥Ä·¥õ·¥á·¥Ö Íú± èÍú±·¥õ·¥á·¥ç ·¥° ú·¥Ä·¥õÍú±·¥Ä·¥ò·¥ò  ô·¥è·¥õ ·¥õ ú·¥Ä·¥õ ·¥Ñ·¥Ä…¥  ú·¥á ü·¥ò ·¥õ·¥è ·¥Ö·¥è Íú±·¥è·¥ç·¥á·¥õ ú…™…¥…¢, Íú±·¥á·¥Ä Ä·¥Ñ ú ·¥Ä…¥·¥Ö …¢·¥á·¥õ ·¥Ö·¥Ä·¥õ·¥Ä / …™…¥Íú∞·¥è Ä·¥ç·¥Ä·¥õ·¥ú·¥è…¥ ·¥è…¥ ü è ·¥õ ú Ä·¥è·¥ú…¢ ú *·¥° ú·¥Ä·¥õÍú±·¥Ä·¥ò·¥ò.*

> *·¥†·¥á Äs…™·¥è…¥* : ${require("../package.json").version}
> * Ä·¥ú…¥ ·¥õ…™·¥ç·¥á* : ${runtime(process.uptime())}

‚ï≠‚ïº‚ïº‚ïº‚ïº‚ïº‚ïº‚ïº‚ïº‚ïº‚ïº
*‚îú1 ‚Ä¢ OWNER*
*‚îú2 ‚Ä¢ CONVERT*
*‚îú3 ‚Ä¢ DOWNLOAD*
*‚îú4 ‚Ä¢ AI*
*‚îú5 ‚Ä¢ SEARCH*
*‚îú6 ‚Ä¢ MAIN*
*‚îú7 ‚Ä¢ GROUP*
‚ï∞‚ïº‚ïº‚ïº‚ïº‚ïº‚ïº‚ïº‚ïº‚ïº‚ïº

_*‚òòSelect the Number format you want*_
`
let ownermenu = `
üë©‚Äçüíª *OWNER COMMANDS* üë©‚Äçüíª\n\n${menu.owner}
`
let convertmenu = `
üåÄ *CONVERT COMMANDS* üåÄ\n\n${menu.convert}
`
let downloadmenu = `
üì• *DOWNLOAD COMMANDS* üì•\n\n${menu.download}
`
let aimenu = `
üëæ *AI COMMANDS* üëæ\n\n${menu.ai}
`
let searchmenu = `
üîç *SEARCH COMMANDS* üîç\n\n${menu.search}
`
let mainmenu = `
‚òò *MAIN COMMANDS* ‚òò\n\n${menu.main}
`
let groupmenu = `
‚öôÔ∏è *GROUP COMMANDS* ‚öôÔ∏è\n\n${menu.group}
`
// Send the initial message and store the message ID
const sentMsg = await conn.sendMessage(from, {
document: { url: pdfUrl }, // Path to your PDF file
    fileName: 'QUEEN-ZAZIE-MD-V1', // Filename for the document
    mimetype: "application/xml",
    fileLength: 99999999999999,
    caption: menumsg,
    contextInfo: {
        forwardingScore: 999,
        isForwarded: true,
        forwardedNewsletterMessageInfo: {
            newsletterName: '‰π°Q“Ω“Ω…≥-‰πôazie-MultiDevice‡øê',
            newsletterJid: "120363331860205900@newsletter",
        },
        externalAdReply: {
            title: 'Ôº±ÔºµÔº•Ôº•ÔºÆ-Ôº∫Ôº°Ôº∫Ôº©Ôº• Ôº≠Ôº§-ÔΩñ1',
            body: '·¥ò·¥è·¥°·¥á Ä·¥á·¥Ö  ô è ‚Ä¢ …¥ ô·¥õ·¥ç·¥Ä·¥Ö ú·¥úÍú±…™·¥õ ú',
            thumbnailUrl: config.ALIVE_IMG, // Use the URL directly here
            sourceUrl: 'https://queen-zazie-md.vercel.app',
            mediaType: 1,
            renderLargerThumbnail: true
        }
    }
});
const messageID = sentMsg.key.id; // Save the message ID for later reference


// Listen for the user's response
conn.ev.on('messages.upsert', async (messageUpdate) => {
    const mek = messageUpdate.messages[0];
    if (!mek.message) return;
    const messageType = mek.message.conversation || mek.message.extendedTextMessage?.text;
    const from = mek.key.remoteJid;
    const sender = mek.key.participant || mek.key.remoteJid;

    // Check if the message is a reply to the previously sent message
    const isReplyToSentMsg = mek.message.extendedTextMessage && mek.message.extendedTextMessage.contextInfo.stanzaId === messageID;

    if (isReplyToSentMsg) {
        // React to the user's reply (the "1" or "2" message)
        await conn.sendMessage(from, { react: { text: 'üëæ', key: mek.key } });

        if (messageType === '1') {
            // Handle option 1 (Audio File)
            await conn.sendMessage(from, {
            document: { url: pdfUrl }, // Path to your PDF file
                fileName: 'QUEEN-ZAZIE-MD-V1', // Filename for the document
                mimetype: "application/xml",
                fileLength: 99999999999999,
                caption: ownermenu,
                contextInfo: {
                    forwardingScore: 999,
                    isForwarded: true,
                    forwardedNewsletterMessageInfo: {
                        newsletterName: '‰π°Q“Ω“Ω…≥-‰πôazie-MultiDevice‡øê',
                        newsletterJid: "120363331860205900@newsletter",
                    },
                    externalAdReply: {
                        title: 'Ôº±ÔºµÔº•Ôº•ÔºÆ-Ôº∫Ôº°Ôº∫Ôº©Ôº• Ôº≠Ôº§-ÔΩñ1',
                        body: '·¥ò·¥è·¥°·¥á Ä·¥á·¥Ö  ô è ‚Ä¢ …¥ ô·¥õ·¥ç·¥Ä·¥Ö ú·¥úÍú±…™·¥õ ú',
                        thumbnailUrl: config.ALIVE_IMG, // Use the URL directly here
                        sourceUrl: 'https://queen-zazie-md.vercel.app',
                        mediaType: 1,
                        renderLargerThumbnail: true
                    }
                }
            });
        // React to the successful completion of the task
        }
        { else if (messageType === '2') {
            // Handle option 1 (Audio File)
            await conn.sendMessage(from, {
            document: { url: pdfUrl }, // Path to your PDF file
                fileName: 'QUEEN-ZAZIE-MD-V1', // Filename for the document
                mimetype: "application/xml",
                fileLength: 99999999999999,
                caption: convertmenu,
                contextInfo: {
                    forwardingScore: 999,
                    isForwarded: true,
                    forwardedNewsletterMessageInfo: {
                        newsletterName: '‰π°Q“Ω“Ω…≥-‰πôazie-MultiDevice‡øê',
                        newsletterJid: "120363331860205900@newsletter",
                    },
                    externalAdReply: {
                        title: 'Ôº±ÔºµÔº•Ôº•ÔºÆ-Ôº∫Ôº°Ôº∫Ôº©Ôº• Ôº≠Ôº§-ÔΩñ1',
                        body: '·¥ò·¥è·¥°·¥á Ä·¥á·¥Ö  ô è ‚Ä¢ …¥ ô·¥õ·¥ç·¥Ä·¥Ö ú·¥úÍú±…™·¥õ ú',
                        thumbnailUrl: config.ALIVE_IMG, // Use the URL directly here
                        sourceUrl: 'https://queen-zazie-md.vercel.app',
                        mediaType: 1,
                        renderLargerThumbnail: true
                    }
                }
            });
        // React to the successful completion of the task
        }
        { else if (messageType === '3') {
            // Handle option 1 (Audio File)
            await conn.sendMessage(from, {
            document: { url: pdfUrl }, // Path to your PDF file
                fileName: 'QUEEN-ZAZIE-MD-V1', // Filename for the document
                mimetype: "application/xml",
                fileLength: 99999999999999,
                caption: downloadmenu,
                contextInfo: {
                    forwardingScore: 999,
                    isForwarded: true,
                    forwardedNewsletterMessageInfo: {
                        newsletterName: '‰π°Q“Ω“Ω…≥-‰πôazie-MultiDevice‡øê',
                        newsletterJid: "120363331860205900@newsletter",
                    },
                    externalAdReply: {
                        title: 'Ôº±ÔºµÔº•Ôº•ÔºÆ-Ôº∫Ôº°Ôº∫Ôº©Ôº• Ôº≠Ôº§-ÔΩñ1',
                        body: '·¥ò·¥è·¥°·¥á Ä·¥á·¥Ö  ô è ‚Ä¢ …¥ ô·¥õ·¥ç·¥Ä·¥Ö ú·¥úÍú±…™·¥õ ú',
                        thumbnailUrl: config.ALIVE_IMG, // Use the URL directly here
                        sourceUrl: 'https://queen-zazie-md.vercel.app',
                        mediaType: 1,
                        renderLargerThumbnail: true
                    }
                }
            });
        // React to the successful completion of the task
        }
        { else if (messageType === '4') {
            // Handle option 1 (Audio File)
            await conn.sendMessage(from, {
            document: { url: pdfUrl }, // Path to your PDF file
                fileName: 'QUEEN-ZAZIE-MD-V1', // Filename for the document
                mimetype: "application/xml",
                fileLength: 99999999999999,
                caption: aimenu,
                contextInfo: {
                    forwardingScore: 999,
                    isForwarded: true,
                    forwardedNewsletterMessageInfo: {
                        newsletterName: '‰π°Q“Ω“Ω…≥-‰πôazie-MultiDevice‡øê',
                        newsletterJid: "120363331860205900@newsletter",
                    },
                    externalAdReply: {
                        title: 'Ôº±ÔºµÔº•Ôº•ÔºÆ-Ôº∫Ôº°Ôº∫Ôº©Ôº• Ôº≠Ôº§-ÔΩñ1',
                        body: '·¥ò·¥è·¥°·¥á Ä·¥á·¥Ö  ô è ‚Ä¢ …¥ ô·¥õ·¥ç·¥Ä·¥Ö ú·¥úÍú±…™·¥õ ú',
                        thumbnailUrl: config.ALIVE_IMG, // Use the URL directly here
                        sourceUrl: 'https://queen-zazie-md.vercel.app',
                        mediaType: 1,
                        renderLargerThumbnail: true
                    }
                }
            });
        // React to the successful completion of the task
        }
        { else if (messageType === '5') {
            // Handle option 1 (Audio File)
            await conn.sendMessage(from, {
            document: { url: pdfUrl }, // Path to your PDF file
                fileName: 'QUEEN-ZAZIE-MD-V1', // Filename for the document
                mimetype: "application/xml",
                fileLength: 99999999999999,
                caption: searchmenu,
                contextInfo: {
                    forwardingScore: 999,
                    isForwarded: true,
                    forwardedNewsletterMessageInfo: {
                        newsletterName: '‰π°Q“Ω“Ω…≥-‰πôazie-MultiDevice‡øê',
                        newsletterJid: "120363331860205900@newsletter",
                    },
                    externalAdReply: {
                        title: 'Ôº±ÔºµÔº•Ôº•ÔºÆ-Ôº∫Ôº°Ôº∫Ôº©Ôº• Ôº≠Ôº§-ÔΩñ1',
                        body: '·¥ò·¥è·¥°·¥á Ä·¥á·¥Ö  ô è ‚Ä¢ …¥ ô·¥õ·¥ç·¥Ä·¥Ö ú·¥úÍú±…™·¥õ ú',
                        thumbnailUrl: config.ALIVE_IMG, // Use the URL directly here
                        sourceUrl: 'https://queen-zazie-md.vercel.app',
                        mediaType: 1,
                        renderLargerThumbnail: true
                    }
                }
            });
        // React to the successful completion of the task
        }
        { else if (messageType === '6') {
            // Handle option 1 (Audio File)
            await conn.sendMessage(from, {
            document: { url: pdfUrl }, // Path to your PDF file
                fileName: 'QUEEN-ZAZIE-MD-V1', // Filename for the document
                mimetype: "application/xml",
                fileLength: 99999999999999,
                caption: mainmenu,
                contextInfo: {
                    forwardingScore: 999,
                    isForwarded: true,
                    forwardedNewsletterMessageInfo: {
                        newsletterName: '‰π°Q“Ω“Ω…≥-‰πôazie-MultiDevice‡øê',
                        newsletterJid: "120363331860205900@newsletter",
                    },
                    externalAdReply: {
                        title: 'Ôº±ÔºµÔº•Ôº•ÔºÆ-Ôº∫Ôº°Ôº∫Ôº©Ôº• Ôº≠Ôº§-ÔΩñ1',
                        body: '·¥ò·¥è·¥°·¥á Ä·¥á·¥Ö  ô è ‚Ä¢ …¥ ô·¥õ·¥ç·¥Ä·¥Ö ú·¥úÍú±…™·¥õ ú',
                        thumbnailUrl: config.ALIVE_IMG, // Use the URL directly here
                        sourceUrl: 'https://queen-zazie-md.vercel.app',
                        mediaType: 1,
                        renderLargerThumbnail: true
                    }
                }
            });
        // React to the successful completion of the task
        }
        { else if (messageType === '7') {
            // Handle option 1 (Audio File)
            await conn.sendMessage(from, {
            document: { url: pdfUrl }, // Path to your PDF file
                fileName: 'QUEEN-ZAZIE-MD-V1', // Filename for the document
                mimetype: "application/xml",
                fileLength: 99999999999999,
                caption: groupmenu,
                contextInfo: {
                    forwardingScore: 999,
                    isForwarded: true,
                    forwardedNewsletterMessageInfo: {
                        newsletterName: '‰π°Q“Ω“Ω…≥-‰πôazie-MultiDevice‡øê',
                        newsletterJid: "120363331860205900@newsletter",
                    },
                    externalAdReply: {
                        title: 'Ôº±ÔºµÔº•Ôº•ÔºÆ-Ôº∫Ôº°Ôº∫Ôº©Ôº• Ôº≠Ôº§-ÔΩñ1',
                        body: '·¥ò·¥è·¥°·¥á Ä·¥á·¥Ö  ô è ‚Ä¢ …¥ ô·¥õ·¥ç·¥Ä·¥Ö ú·¥úÍú±…™·¥õ ú',
                        thumbnailUrl: config.ALIVE_IMG, // Use the URL directly here
                        sourceUrl: 'https://queen-zazie-md.vercel.app',
                        mediaType: 1,
                        renderLargerThumbnail: true
                    }
                }
            });
        // React to the successful completion of the task
        }
    }
});

} catch (e) {
console.log(e);
reply(`${e}`);
}
});